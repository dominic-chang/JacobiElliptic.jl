var documenterSearchIndex = {"docs":
[{"location":"api/#JacobiElliptic-API","page":"JacobiElliptic API","title":"JacobiElliptic API","text":"","category":"section"},{"location":"api/#Index","page":"JacobiElliptic API","title":"Index","text":"","category":"section"},{"location":"api/","page":"JacobiElliptic API","title":"JacobiElliptic API","text":"api.md","category":"page"},{"location":"api/#Elliptic-Integrals","page":"JacobiElliptic API","title":"Elliptic Integrals","text":"","category":"section"},{"location":"api/","page":"JacobiElliptic API","title":"JacobiElliptic API","text":"JacobiElliptic.FukushimaAlg.K\nJacobiElliptic.FukushimaAlg.E\nJacobiElliptic.FukushimaAlg.F\nJacobiElliptic.FukushimaAlg.Pi\nJacobiElliptic.FukushimaAlg.J","category":"page"},{"location":"api/#JacobiElliptic.FukushimaAlg.K","page":"JacobiElliptic API","title":"JacobiElliptic.FukushimaAlg.K","text":"K(m) = int_0^pi2fracdthetasqrt1-k^2sin(theta)^2\n\nReturns the complete elliptic integral of the first kind.\n\nArguments\n\nm : Elliptic modulus\n\n\n\n\n\n","category":"function"},{"location":"api/#JacobiElliptic.FukushimaAlg.E","page":"JacobiElliptic API","title":"JacobiElliptic.FukushimaAlg.E","text":"E(m) = int_0^pi2sqrt1-k^2sin(theta)^2dtheta\n\nReturns the complete elliptic integral of the second kind.\n\nArguments\n\nm : Elliptic modulus\n\n\n\n\n\nE(varphi m) = int_0^varphidtheta sqrt1-msin(theta)^2\n\nReturns the incomplete elliptic integral of the second kind.\n\nArguments\n\nφ : Amplitude\nm : Elliptic modulus\n\n\n\n\n\n","category":"function"},{"location":"api/#JacobiElliptic.FukushimaAlg.F","page":"JacobiElliptic API","title":"JacobiElliptic.FukushimaAlg.F","text":"F(varphi  m) = int_0^varphifracdthetasqrt1-msin(theta)^2\n\nReturns the incomplete elliptic integral of the first kind.\n\nArguments\n\nφ : Amplitude\nm : Elliptic modulus\n\n\n\n\n\n","category":"function"},{"location":"api/#JacobiElliptic.FukushimaAlg.Pi","page":"JacobiElliptic API","title":"JacobiElliptic.FukushimaAlg.Pi","text":"Pi(nm)=int_0^1 frac11-nt^2fracdtsqrtleft(1-mt^2right)left(1-t^2right)\n\nReturns the complete elliptic integral of the third kind.\n\nArguments\n\nn : Characteristic\nm : Elliptic modulus\n\n\n\n\n\nPi (nvarphi m)=int _0^sin varphi frac 11-nt^2frac dtsqrt left(1-mt^2right)left(1-t^2right)\n\nReturns the incomplete elliptic integral of the third kind.\n\nArguments\n\nn : Characteristic\nφ : Amplitude\nm : Elliptic modulus\n\n\n\n\n\n","category":"function"},{"location":"api/#JacobiElliptic.FukushimaAlg.J","page":"JacobiElliptic API","title":"JacobiElliptic.FukushimaAlg.J","text":"J (nvarphi m)=fracPi(nvarphi m) - F(varphim)n\n\nReturns the associate incomplete elliptic integral of the third kind.\n\nArguments\n\nn : Characteristic\nφ : Amplitude\nm : Elliptic modulus\n\n\n\n\n\nJ(nvarphi m)=fracPi(npi2 m) - K(m)n\n\nReturns the associate complete elliptic integral of the third kind.\n\nArguments\n\nn : Characteristic\nm : Elliptic modulus\n\n\n\n\n\n","category":"function"},{"location":"api/#Jacobi-Elliptic-Functions","page":"JacobiElliptic API","title":"Jacobi Elliptic Functions","text":"","category":"section"},{"location":"api/","page":"JacobiElliptic API","title":"JacobiElliptic API","text":"JacobiElliptic.FukushimaAlg.sn\nJacobiElliptic.FukushimaAlg.cn\nJacobiElliptic.FukushimaAlg.dn\nJacobiElliptic.FukushimaAlg.asn\nJacobiElliptic.FukushimaAlg.acn\nJacobiElliptic.CarlsonAlg.am\nJacobiElliptic.CarlsonAlg.ellipke","category":"page"},{"location":"api/#JacobiElliptic.FukushimaAlg.sn","page":"JacobiElliptic API","title":"JacobiElliptic.FukushimaAlg.sn","text":"textsn(um)=sintextam(um), where textam(um)=F^-1(um)  is the Jacobi amplitude.\n\nReturns the Jacobi Elliptic sn.\n\nArguments\n\nu : Amplitude\nm : Elliptic modulus\n\n\n\n\n\n","category":"function"},{"location":"api/#JacobiElliptic.FukushimaAlg.cn","page":"JacobiElliptic API","title":"JacobiElliptic.FukushimaAlg.cn","text":"textcn(um)=costextam(um), where textam(um)=F^-1(um)  is the Jacobi amplitude.\n\nReturns the Jacobi Elliptic cn.\n\nArguments\n\nu : Amplitude\nm : Elliptic modulus\n\n\n\n\n\n","category":"function"},{"location":"api/#JacobiElliptic.FukushimaAlg.dn","page":"JacobiElliptic API","title":"JacobiElliptic.FukushimaAlg.dn","text":"textdn(um)=fracdd utextam(um), where textam(um)=F^-1(um)  is the Jacobi amplitude.\n\nReturns the Jacobi Elliptic dn.\n\nArguments\n\nu : Amplitude\nm : Elliptic modulus\n\n\n\n\n\n","category":"function"},{"location":"api/#JacobiElliptic.FukushimaAlg.asn","page":"JacobiElliptic API","title":"JacobiElliptic.FukushimaAlg.asn","text":"textasn(um)=textsn^-1(um).\n\nReturns the inverse Jacobi Elliptic sn.\n\nArguments\n\nu : Amplitude\nm : Elliptic modulus\n\n\n\n\n\n","category":"function"},{"location":"api/#JacobiElliptic.FukushimaAlg.acn","page":"JacobiElliptic API","title":"JacobiElliptic.FukushimaAlg.acn","text":"textacn(um)=textcn^-1(um).\n\nReturns the inverse Jacobi Elliptic cn.\n\nArguments\n\nu : Amplitude\nm : Elliptic modulus\n\n\n\n\n\n","category":"function"},{"location":"api/#JacobiElliptic.CarlsonAlg.am","page":"JacobiElliptic API","title":"JacobiElliptic.CarlsonAlg.am","text":"am(u::Real, m::Real, [tol::Real=eps(Float64)])\n\nReturns amplitude, φ, such that u = F(φ | m)\n\nLanden sequence with convergence to tol used if √(tol) ≤ m ≤ 1 - √(tol)\n\n\n\n\n\n","category":"function"},{"location":"api/#JacobiElliptic.CarlsonAlg.ellipke","page":"JacobiElliptic API","title":"JacobiElliptic.CarlsonAlg.ellipke","text":"ellipke(m::Real) returns (K(m), E(m)) for scalar 0 ≤ m ≤ 1\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = JacobiElliptic","category":"page"},{"location":"#JacobiElliptic","page":"Home","title":"JacobiElliptic","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"JacobiElliptic is an implementation of Toshio Fukushima's & Billie C. Carlson's algorithms for calculating Elliptic Integrals and Jacobi Elliptic Functions. ","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Type stable and preserving\nMetal.jl and CUDA.jl compatible\nAutomatic Differentiable with ForwardDiff, Zygote and Enzyme","category":"page"}]
}
